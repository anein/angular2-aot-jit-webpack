/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './stock.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/linker/view_container';
import * as import9 from '../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import10 from '@angular/core/src/linker/template_ref';
import * as import11 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import12 from '@angular/common/src/directives/ng_for';
import * as import13 from './stock-card.component';
import * as import14 from '../../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import15 from './stock-card.component.ngfactory';
import * as import16 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import17 from '@angular/core/src/linker/element_ref';
import * as import18 from '@angular/common/src/directives/ng_class';
export class Wrapper_StockComponent {
  /*private*/ _eventHandler:Function;
  context:import0.StockComponent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.StockComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_StockComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_StockComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.StockComponent>;
  _StockComponent_0_3:Wrapper_StockComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_StockComponent_Host0,renderType_StockComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'stock-list',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_StockComponent0(this.viewUtils,this,0,this._el_0);
    this._StockComponent_0_3 = new Wrapper_StockComponent();
    this.compView_0.create(this._StockComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._StockComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.StockComponent) && (0 === requestNodeIndex))) { return this._StockComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._StockComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const StockComponentNgFactory:import7.ComponentFactory<import0.StockComponent> = new import7.ComponentFactory<import0.StockComponent>('stock-list',View_StockComponent_Host0,import0.StockComponent);
const styles_StockComponent:any[] = ([] as any[]);
var renderType_StockComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_StockComponent,{});
export class View_StockComponent0 extends import1.AppView<import0.StockComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _anchor_5:any;
  /*private*/ _vc_5:import8.ViewContainer;
  _TemplateRef_5_5:any;
  _NgFor_5_6:import9.Wrapper_NgFor;
  _text_6:any;
  _text_7:any;
  _text_8:any;
  _text_9:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_StockComponent0,renderType_StockComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','row middle-xs center-xs'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n\n  ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'div',new import3.InlineArray2(2,'class','col-md-3 col-sm-4 col-xs-10'),(null as any));
    this._text_4 = this.renderer.createText(this._el_3,'\n\n    ',(null as any));
    this._anchor_5 = this.renderer.createTemplateAnchor(this._el_3,(null as any));
    this._vc_5 = new import8.ViewContainer(5,3,this,this._anchor_5);
    this._TemplateRef_5_5 = new import10.TemplateRef_(this,5,this._anchor_5);
    this._NgFor_5_6 = new import9.Wrapper_NgFor(this._vc_5.vcRef,this._TemplateRef_5_5,this.parentView.injectorGet(import11.IterableDiffers,this.parentIndex),this.ref);
    this._text_6 = this.renderer.createText(this._el_3,'\n  ',(null as any));
    this._text_7 = this.renderer.createText(this._el_1,'\n\n',(null as any));
    this._text_8 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._text_9 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._anchor_5,
      this._text_6,
      this._text_7,
      this._text_8,
      this._text_9
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import10.TemplateRef) && (5 === requestNodeIndex))) { return this._TemplateRef_5_5; }
    if (((token === import12.NgFor) && (5 === requestNodeIndex))) { return this._NgFor_5_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_5_0_0:any = this.context.stocks;
    this._NgFor_5_6.check_ngForOf(currVal_5_0_0,throwOnChange,false);
    this._NgFor_5_6.ngDoCheck(this,this._anchor_5,throwOnChange);
    this._vc_5.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_5.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 5)) { return new View_StockComponent1(this.viewUtils,this,5,this._anchor_5,this._vc_5); }
    return (null as any);
  }
}
class View_StockComponent1 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import13.StockCardComponent>;
  _NgClass_0_3:import14.Wrapper_NgClass;
  _StockCardComponent_0_4:import15.Wrapper_StockCardComponent;
  _text_1:any;
  _map_5:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import8.ViewContainer) {
    super(View_StockComponent1,renderType_StockComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._map_5 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {active: p0};
    });
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'stock-card',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import15.View_StockCardComponent0(this.viewUtils,this,0,this._el_0);
    this._NgClass_0_3 = new import14.Wrapper_NgClass(this.parentView.parentView.injectorGet(import11.IterableDiffers,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import16.KeyValueDiffers,this.parentView.parentIndex),new import17.ElementRef(this._el_0),this.renderer);
    this._StockCardComponent_0_4 = new import15.Wrapper_StockCardComponent();
    this._text_1 = this.renderer.createText((null as any),'\n\n    ',(null as any));
    this.compView_0.create(this._StockCardComponent_0_4.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'update',(null as any)),this.eventHandler(this.handleEvent_0));
    this._StockCardComponent_0_4.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgClass_0_3.context; }
    if (((token === import13.StockCardComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._StockCardComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this._map_5(!!this.context.$implicit.active);
    this._NgClass_0_3.check_ngClass(currVal_0_0_0,throwOnChange,false);
    this._NgClass_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = this.context.$implicit.type;
    this._StockCardComponent_0_4.check_stockType(currVal_0_1_0,throwOnChange,false);
    const currVal_0_1_1:boolean = !!this.context.$implicit.active;
    this._StockCardComponent_0_4.check_stockState(currVal_0_1_1,throwOnChange,false);
    this._StockCardComponent_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._StockCardComponent_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'update')) {
      const pd_sub_0:any = ((<any>this.parentView.context.changeStockType($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}